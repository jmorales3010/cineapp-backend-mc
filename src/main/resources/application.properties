spring.jpa.database=POSTGRESQL
#mostrara en consola las sentencias sql
spring.jpa.show-sql=true

#create - como java se comportara con la BD
#create-drop crea las tablas y cuando se detenga, las elimina
#validate valida lo que tengo en java con lo que hay en mi BD
spring.jpa.hibernate.ddl-auto=update
#SpringData utiliza el CORE de hibernate, para poder manipular la BD desde JAVA

spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost/cineapp
spring.datasource.username=postgres
spring.datasource.password=scmj010400
#linea exclusiva para spring boot 2 con postgres
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

mitocine.default-rol=2

security.oauth2.resource.filter-order=3

#https://github.com/nydiarra/springboot-jwt
security.signing-key=MaYzkSjmkzPC57L
security.encoding-strength=256
security.security-realm=Spring Boot JWT

security.jwt.client-id=mitocineapp
security.jwt.client-secret=mito89codex
security.jwt.grant-type=password
security.jwt.scope-read=read
security.jwt.scope-write=write
security.jwt.resource-ids=mitoresourceid